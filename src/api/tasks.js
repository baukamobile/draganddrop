import axios from "axios";
const API_URL_TASK = import.meta.env.VITE_API_URL;
const API_URL_PROJECTS = import.meta.env.VITE_API_URL_PROJECTS;
const API_URL = import.meta.env.VITE_API_BASE_URL;  
axios.interceptors.request.use(config => {
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ Axios
    const token = localStorage.getItem('access_token'); // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
    if(token){  // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –µ—Å—Ç—å, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
        config.headers['Authorization'] = `Bearer ${token}`;
    }
    //–ï—Å–ª–∏ –≤—Å—ë –Ω–æ—Ä–º–∞–ª—å–Ω–æ ‚Äî config –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –¥–∞–ª—å—à–µ –≤ axios
    return config; 
    // –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞, –æ—Ç–∫–ª–æ–Ω—è–µ–º –ø—Ä–æ–º–∏—Å
},error => Promise.reject(error)); 
//Promise.reject(error), —á—Ç–æ –ø–µ—Ä–µ–¥–∞–µ—Ç –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ –ø–æ —Ü–µ–ø–æ—á–∫–µ .catch()



export const getDataApi = async (first_url, second_url) => {
    const response = await axios.get(`${API_URL}${first_url}${second_url}`); 
    
    return response.data;
};
export const getTask = async()=>{
    const response = await axios.get(`${API_URL_TASK}/`)
    // alert('–ó–∞–¥–∞—á–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã')
    return response.data
};
export const getProjects = async()=>{
    const response = await axios.get(`${API_URL_PROJECTS}/`);
    return response.data;
}
const API_URL_STATUS = import.meta.env.VITE_API_URL_STATUS;

export const getStatusTask = async()=>{
    const response = await axios.get(`${API_URL_STATUS}/`) 
    console.log('status:', response.data)
    return response.data
};

export async function updateTaskStatus(taskId, statusId) {
    const response = await axios.patch(`${API_URL_TASK}/${taskId}/`, { status: statusId }); // üëà –ú–µ–Ω—è–µ–º `statusesId` –Ω–∞ `status`
    return response.data;
}
export async function addTask(taskData) {
    const response = await axios.post(`${API_URL_TASK}/`,taskData);
    return response.data;
}


export async function addColumn(newStatus){
    const response = await axios.post(`${API_URL_STATUS}/`,newStatus);
    return response.data;
    // await axios.get(`${API_URL_USERS}/`)
}
